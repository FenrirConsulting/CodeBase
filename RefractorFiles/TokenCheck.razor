

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }

    [Inject]
    private ITokenService? _TokenService { get; set; }

    [Inject]
    private NavigationManager? _NavigationManager { get; set; }

    [Inject]
    private IGraphServiceAPI? _GraphService { get; set; }


    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationState!;
        if (authState != null && authState.User.Identity!.IsAuthenticated)
        {
            try
            {
                var User = authState.User;
                string UserId = User.FindFirst("uid")?.Value.ToString()!;
                var graphAccessToken = await _TokenService!.AcquireGraphTokenAsync(UserId);
                bool setName = await _TokenService.SetCurrentUserDisplayName();

                if(_TokenService.UserGroupNames == null)
                {
                    await _TokenService.InitializeUserGroups(User);
                }
            }
            catch (CustomInteractiveSignInRequiredException)
            {
                _NavigationManager!.NavigateTo("/authentication/login");
            }
        }
    }
}
